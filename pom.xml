<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.selenium</groupId>
  <artifactId>Selenium-BDD-Trainig</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>Selenium-BDD-Trainig</name>
  <!-- FIXME change it to the project's website -->
  <url>https://suite8demo.suiteondemand.com/#/Login</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <selenium.version>4.6.0</selenium.version>
    <junit.version>5.9.1</junit.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>7.9.0</version>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-core</artifactId>
      <version>7.9.0</version>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>7.9.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-picocontainer</artifactId>
      <version>7.9.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.30</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    <groupId>org.junit.jupiter</groupId>
    <artifactId>junit-jupiter-api</artifactId>
    <version>${junit.version}</version>
    <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.19.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.19.0</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.2</version>
    </dependency>
    <!--    Thought of using this dependency for report generation but they are not working at all-->
<!--     <dependency>-->
<!--      <groupId>tech.grasshopper</groupId>-->
<!--      <artifactId>extent-pdf-report</artifactId>-->
<!--      <version>2.9.1</version>-->
<!--    </dependency>-->
    <dependency>
      <groupId>tech.grasshopper</groupId>
      <artifactId>extentreports-cucumber7-adapter</artifactId>
      <version>1.9.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
<!--        <plugin>-->
<!--          <artifactId>maven-surefire-plugin</artifactId>-->
<!--          <version>2.22.1</version>-->
<!--        </plugin>-->
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <testFailureIgnore>true</testFailureIgnore>
            <systemPropertyVariables>
              <extent.reporter.spark.start>true</extent.reporter.spark.start>
              <extent.reporter.spark.out>test-output/reports/automation-test-report.html</extent.reporter.spark.out>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>net.masterthought</groupId>
          <artifactId>maven-cucumber-reporting</artifactId>
          <version>(check version above)</version>

          <executions>
            <execution>
              <id>execution</id>
              <phase>verify</phase>
              <goals>
                <goal>generate</goal>
              </goals>
              <configuration>
                <projectName>Selenium-BDD-Trainig</projectName>
                <!-- optional, per documentation set this to "true" to bypass generation of Cucumber Reports entirely, defaults to false if not specified -->
                <skip>false</skip>
                <!-- output directory for the generated report -->
                <outputDirectory>${project.build.directory}</outputDirectory>
                <!-- optional, defaults to outputDirectory if not specified -->
                <inputDirectory>${project.build.directory}/jsonReports</inputDirectory>
                <jsonFiles>
                  <!-- supports wildcard or name pattern -->
                  <param>**/*.json</param>
                </jsonFiles>
                <!-- optional, defaults to outputDirectory if not specified -->
                <classificationDirectory>${project.build.directory}/classifications</classificationDirectory>
                <classificationFiles>
                  <!-- supports wildcard or name pattern -->
                  <param>sample.properties</param>
                  <param>other.properties</param>
                </classificationFiles>
                <parallelTesting>false</parallelTesting>
                <!-- optional, set true to group features by its Ids -->
                <mergeFeaturesById>false</mergeFeaturesById>
                <!-- optional, set true to get a final report with latest results of the same test from different test runs -->
                <mergeFeaturesWithRetest>false</mergeFeaturesWithRetest>
                <!-- optional, set true to fail build on test failures -->
                <checkBuildResult>false</checkBuildResult>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>

    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
